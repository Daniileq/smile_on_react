{"ast":null,"code":"var _jsxFileName = \"/Users/danilledaev/my-app/src/Loading.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GetUrl() {\n  _s();\n\n  useEffect(async () => {\n    let f1 = async () => {\n      let url = \"https://api.github.com/users/facebook/repos\";\n      let response = await fetch(url);\n      let makeJson = await response.json();\n      let displayJson = await makeJson.map(elem => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: console.log(elem)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this));\n      return displayJson;\n    };\n\n    return;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: useEffect\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n}\n\n_s(GetUrl, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = GetUrl;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetUrl\");","map":{"version":3,"sources":["/Users/danilledaev/my-app/src/Loading.js"],"names":["useEffect","useState","GetUrl","f1","url","response","fetch","makeJson","json","displayJson","map","elem","console","log"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AACvBF,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIG,EAAE,GAAG,YAAY;AACnB,UAAIC,GAAG,GAAG,6CAAV;AACA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA1B;AACA,UAAIG,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,UAAIC,WAAW,GAAG,MAAMF,QAAQ,CAACG,GAAT,CAAcC,IAAD,iBACnC;AAAA,kBAAMC,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAAN;AAAA;AAAA;AAAA;AAAA,cADsB,CAAxB;AAGA,aAAOF,WAAP;AACD,KARD;;AASF;AACC,GAXQ,EAWN,EAXM,CAAT;AAaA,sBAAO;AAAA,cAAMT;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAfeE,M;;KAAAA,M","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport function GetUrl() {\n  useEffect(async () => {\n    let f1 = async () => {\n      let url = \"https://api.github.com/users/facebook/repos\";\n      let response = await fetch(url);\n      let makeJson = await response.json();\n      let displayJson = await makeJson.map((elem) => (\n        <div>{console.log(elem)}</div>\n      ));\n      return displayJson;\n    };\n  return \n  }, []);\n\n  return <div>{useEffect}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}