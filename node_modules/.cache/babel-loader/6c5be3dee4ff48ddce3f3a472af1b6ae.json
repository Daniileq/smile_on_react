{"ast":null,"code":"var _jsxFileName = \"/Users/danilledaev/my-app/src/Main.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // import { Data } from \"./emogiJson\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n\n  const url = \" https://emoji.ymatuhin.workers.dev/\";\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(\"\"); //Прослушивание события из input\n\n  const handlChange = event => setValue(event.target.value); //   console.log(handlChange);\n\n\n  console.log(value.split(\" \")); // value.split(\" \").forEach( elem => {displaySmile.includes(elem)})\n\n  const filterSmile = data.filter(elem => elem.keywords.toLowerCase().includes(value.toLowerCase()));\n  console.log(filterSmile);\n\n  for (i = 0; i < data.length; i++) {\n    console.log();\n    data.length[i];\n  }\n\n  const getData = async () => {\n    let response = await fetch(url);\n    let makeJson = await response.json();\n    setData(makeJson);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const displaySmile = filterSmile.map(elem => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: elem.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: elem.symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: elem.keywords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, elem.keywords, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handlChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: displaySmile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"zvq9kNK/grhl6gp1AVXkMkzragM=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/danilledaev/my-app/src/Main.js"],"names":["useState","useEffect","Main","url","data","setData","value","setValue","handlChange","event","target","console","log","split","filterSmile","filter","elem","keywords","toLowerCase","includes","i","length","getData","response","fetch","makeJson","json","displaySmile","map","title","symbol"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACxB,QAAMC,GAAG,GAAG,sCAAZ;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC,CAHwB,CAKxB;;AACA,QAAMQ,WAAW,GAAIC,KAAD,IAAWF,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAvC,CANwB,CAO1B;;;AACEK,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,KAAN,CAAY,GAAZ,CAAZ,EARwB,CAStB;;AACF,QAAMC,WAAW,GAAGV,IAAI,CAACW,MAAL,CAAaC,IAAD,IAC9BA,IAAI,CAACC,QAAL,CAAcC,WAAd,GAA4BC,QAA5B,CAAqCb,KAAK,CAACY,WAAN,EAArC,CADkB,CAApB;AAGFP,EAAAA,OAAO,CAACC,GAAR,CACIE,WADJ;;AAGE,OAAKM,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGhB,IAAI,CAACiB,MAArB,EAA6BD,CAAC,EAA9B,EAAiC;AACjCT,IAAAA,OAAO,CAACC,GAAR;AAAgBR,IAAAA,IAAI,CAACiB,MAAL,CAAYD,CAAZ;AACf;;AAED,QAAME,OAAO,GAAG,YAAY;AAC1B,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACrB,GAAD,CAA1B;AACA,QAAIsB,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACArB,IAAAA,OAAO,CAACoB,QAAD,CAAP;AACD,GAJD;;AAKAxB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAMK,YAAY,GAAGb,WAAW,CAACc,GAAZ,CAAiBZ,IAAD,iBACnC;AAAA,4BACE;AAAA,gBAAOA,IAAI,CAACa;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAOb,IAAI,CAACc;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAOd,IAAI,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,KAAUD,IAAI,CAACC,QAAf;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;AAOA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAET;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,gBAAMmB;AAAN;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CA1CM;;GAAMzB,I;;KAAAA,I","sourcesContent":["import { useState, useEffect } from \"react\";\n// import { Data } from \"./emogiJson\";\n\nexport const Main = () => {\n  const url = \" https://emoji.ymatuhin.workers.dev/\";\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(\"\");\n\n  //Прослушивание события из input\n  const handlChange = (event) => setValue(event.target.value);\n//   console.log(handlChange);\n  console.log(value.split(\" \"));\n    // value.split(\" \").forEach( elem => {displaySmile.includes(elem)})\n  const filterSmile = data.filter((elem) =>\n    elem.keywords.toLowerCase().includes(value.toLowerCase()) \n  );\nconsole.log(\n    filterSmile\n);\n  for (i = 0; i < data.length; i++){\n  console.log();  data.length[i];\n  }\n\n  const getData = async () => {\n    let response = await fetch(url);\n    let makeJson = await response.json();\n    setData(makeJson);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const displaySmile = filterSmile.map((elem) => (\n    <div key={elem.keywords}>\n      <div >{elem.title}</div>\n      <div >{elem.symbol}</div>\n      <div >{elem.keywords}</div>\n    </div>\n  ));\n  return (\n    <>\n      <input type=\"text\" onChange={handlChange} />\n\n      <div>{displaySmile}</div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}