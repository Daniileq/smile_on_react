{"ast":null,"code":"var _jsxFileName = \"/Users/danilledaev/my-app/src/Main.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // import { Data } from \"./emogiJson\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n\n  const url = \" https://emoji.ymatuhin.workers.dev/\";\n  const [textInput, setInput] = useState([]);\n\n  const DisplayInput = () => {\n    console.log(textInput);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setInput(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: console.log(textInput)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this);\n  };\n\n  DisplayInput(); //   const TextInput = (event) => event.target.value;\n\n  const getData = async () => {\n    let response = await fetch(url);\n    let makeJson = await response.json();\n    setInput(makeJson);\n  };\n\n  useEffect(async () => {\n    getData();\n  }, []);\n  return textInput.map(elem => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: elem.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: elem.symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 58\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: elem.keywords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 82\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 30\n  }, this));\n};\n\n_s(Main, \"N6FB/abJKRYTOjbzqgqYWUvp430=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/danilledaev/my-app/src/Main.js"],"names":["useState","useEffect","Main","url","textInput","setInput","DisplayInput","console","log","event","target","value","getData","response","fetch","makeJson","json","map","elem","title","symbol","keywords"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAC1B,QAAMC,GAAG,GAAG,sCAAZ;AACA,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;;AACC,QAAMM,YAAY,GAAG,MAAM;AAE1BC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,wBACE;AAAA,8BACE;AAAO,QAAA,QAAQ,EAAGK,KAAD,IAAWJ,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd;AAApC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAMJ,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAAN;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GATA;;AAUAE,EAAAA,YAAY,GAba,CAexB;;AACA,QAAMM,OAAO,GAAG,YAAY;AAC1B,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACX,GAAD,CAA1B;AACA,QAAIY,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACAX,IAAAA,QAAQ,CAAEU,QAAF,CAAR;AACD,GAJD;;AAKAd,EAAAA,SAAS,CAAC,YAAW;AACnBW,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAGE,SACIR,SAAS,CAACa,GAAV,CAAcC,IAAI,iBAAG;AAAA,4BAAK;AAAA,gBAAMA,IAAI,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YAAL,eAA4B;AAAA,gBAAMD,IAAI,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,YAA5B,eAAoD;AAAA,gBAAMF,IAAI,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB,CADJ;AAKH,CA7BM;;GAAMnB,I;;KAAAA,I","sourcesContent":["import { useState, useEffect } from \"react\";\n// import { Data } from \"./emogiJson\";\n\nexport const Main = () => {\nconst url = \" https://emoji.ymatuhin.workers.dev/\";\nconst [textInput, setInput] = useState([]);\n const DisplayInput = () => {\n \n  console.log(textInput);\n  return (\n    <div>\n      <input onChange={(event) => setInput(event.target.value)} />\n      <div>{console.log(textInput)}</div>\n    </div>\n  );\n};\n DisplayInput()\n\n  //   const TextInput = (event) => event.target.value;\n  const getData = async () => {\n    let response = await fetch(url);\n    let makeJson = await response.json();\n    setInput (makeJson)\n  };\n  useEffect(async () =>{\n    getData()\n  }, [])\n    return (\n        textInput.map(elem =><div><div>{elem.title}</div><div>{elem.symbol}</div><div>{elem.keywords}</div></div>)\n    )\n\n\n};\n"]},"metadata":{},"sourceType":"module"}