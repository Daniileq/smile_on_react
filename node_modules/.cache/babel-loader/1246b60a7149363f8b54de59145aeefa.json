{"ast":null,"code":"var _jsxFileName = \"/Users/danilledaev/my-app/src/Main.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // import { Data } from \"./emogiJson\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n\n  const url = \" https://emoji.ymatuhin.workers.dev/\";\n  const [Data, setData] = useState([]);\n  const [Value, setValue] = useState(Data); //Прослущивание\n\n  const handlChange = event => setValue(event.target.value); //   let displayInput = () => (\n  //     <input type= \"text\" onChange={handlChange} />\n  //   );\n  //   const Data = (event) => event.target.value;\n\n\n  const getData = async () => {\n    let response = await fetch(url);\n    let makeJson = await response.json();\n    setData(makeJson);\n  };\n\n  useEffect(() => {\n    // displayInput();\n    getData();\n  }, []);\n  const displayData = Data.map(elem => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: elem.title\n    }, elem.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: elem.symbol\n    }, elem.symbol, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: elem.keywords\n    }, elem.keywords, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handlChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: displayData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"haef/D3fAl1yzxBUC0yDnhSXZ8U=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/danilledaev/my-app/src/Main.js"],"names":["useState","useEffect","Main","url","Data","setData","Value","setValue","handlChange","event","target","value","getData","response","fetch","makeJson","json","displayData","map","elem","title","symbol","keywords"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACxB,QAAMC,GAAG,GAAG,sCAAZ;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACI,IAAD,CAAlC,CAHwB,CAKxB;;AACA,QAAMI,WAAW,GAAIC,KAAD,IAAWF,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAvC,CANwB,CAQxB;AACA;AACA;AACA;;;AACA,QAAMC,OAAO,GAAG,YAAY;AAC1B,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACX,GAAD,CAA1B;AACA,QAAIY,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACAX,IAAAA,OAAO,CAACU,QAAD,CAAP;AACD,GAJD;;AAKAd,EAAAA,SAAS,CAAC,MAAM;AACd;AACAW,IAAAA,OAAO;AACR,GAHQ,EAGN,EAHM,CAAT;AAIA,QAAMK,WAAW,GAAGb,IAAI,CAACc,GAAL,CAAUC,IAAD,iBAC3B;AAAA,4BACE;AAAA,gBAAuBA,IAAI,CAACC;AAA5B,OAAUD,IAAI,CAACC,KAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAwBD,IAAI,CAACE;AAA7B,OAAUF,IAAI,CAACE,MAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAA0BF,IAAI,CAACG;AAA/B,OAAUH,IAAI,CAACG,QAAf;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADkB,CAApB;AAOA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEd;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,gBAAMS;AAAN;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CAnCM;;GAAMf,I;;KAAAA,I","sourcesContent":["import { useState, useEffect } from \"react\";\n// import { Data } from \"./emogiJson\";\n\nexport const Main = () => {\n  const url = \" https://emoji.ymatuhin.workers.dev/\";\n  const [Data, setData] = useState([]);\n  const [Value, setValue] = useState(Data);\n\n  //Прослущивание\n  const handlChange = (event) => setValue(event.target.value);\n\n  //   let displayInput = () => (\n  //     <input type= \"text\" onChange={handlChange} />\n  //   );\n  //   const Data = (event) => event.target.value;\n  const getData = async () => {\n    let response = await fetch(url);\n    let makeJson = await response.json();\n    setData(makeJson);\n  };\n  useEffect(() => {\n    // displayInput();\n    getData();\n  }, []);\n  const displayData = Data.map((elem) => (\n    <div>\n      <div key={elem.title}>{elem.title}</div>\n      <div key={elem.symbol}>{elem.symbol}</div>\n      <div key={elem.keywords}>{elem.keywords}</div>\n    </div>\n  ));\n  return (\n    <>\n      <input type=\"text\" onChange={handlChange} />\n\n      <div>{displayData}</div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}