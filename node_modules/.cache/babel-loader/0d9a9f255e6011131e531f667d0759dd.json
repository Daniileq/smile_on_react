{"ast":null,"code":"var _jsxFileName = \"/Users/danilledaev/my-app/src/Main.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // import { Data } from \"./emogiJson\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Main = _ref => {\n  _s();\n\n  let {\n    allEmogi,\n    emogiOnPage\n  } = _ref;\n  const url = \" https://emoji.ymatuhin.workers.dev/\";\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [emogi, setEmogi] = useState([]); //хранение всех емоджи\n\n  const [loading, setLoading] = useState(false); // ожидание   загрузки\n\n  const [currentPage, setCurrentPage] = useState(1); // для отображения текущей страницы\n\n  const [countCurrentPage, setCountCurrentPage] = useState(12); //отображение колличества элементов которые нам нужно отображать на странице\n\n  const pageNambers = [];\n  const lastEmogiIndex = currentPage * countCurrentPage; // высчитывание последнего индекса\n\n  const firstElemIndex = lastEmogiIndex - countCurrentPage; // вычисление первого элемента индекс.\n\n  const currentEmogi = emogi.slice(firstElemIndex, lastEmogiIndex);\n\n  for (i = 1; i <= allEmogi / emogiOnPage; i++) {\n    pageNambers.push(i);\n  } //Прослушивание события из input\n\n\n  const handlChange = event => setValue(event.target.value); //   console.log(handlChange);\n\n\n  const valueArr = value.split(\" \"); //    const  valueArrRender = valueArr;\n  //    value.split(\" \").forEach( elem => {displaySmile.includes(elem)})\n\n  const filterSmile = data.filter(elem => elem.keywords.toLowerCase().includes(valueArr));\n\n  const getData = async () => {\n    let response = await fetch(url);\n    let makeJson = await response.json();\n    setData(makeJson);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const displaySmile = filterSmile.map(elem => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"styleCard\",\n      className: \"elem-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"smile\",\n        children: elem.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: elem.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keywords\",\n        children: elem.keywords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, elem.keywords, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header__title\",\n        children: \"Emoji Finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"h4\",\n        children: \"Find emoji by keywords\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        placeholder: \"Placeholder\",\n        type: \"text\",\n        onChange: handlChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: displaySmile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentEmogi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"IH2mreHpDMykz0dkjhqf6TLNeuI=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/danilledaev/my-app/src/Main.js"],"names":["useState","useEffect","Main","allEmogi","emogiOnPage","url","data","setData","value","setValue","emogi","setEmogi","loading","setLoading","currentPage","setCurrentPage","countCurrentPage","setCountCurrentPage","pageNambers","lastEmogiIndex","firstElemIndex","currentEmogi","slice","i","push","handlChange","event","target","valueArr","split","filterSmile","filter","elem","keywords","toLowerCase","includes","getData","response","fetch","makeJson","json","displaySmile","map","symbol","title"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n// import { Data } from \"./emogiJson\";\n\nexport const Main = ({allEmogi, emogiOnPage }) => {\n  const url = \" https://emoji.ymatuhin.workers.dev/\";\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [emogi, setEmogi] = useState([]); //хранение всех емоджи\n  const [loading, setLoading] = useState(false); // ожидание   загрузки\n  const [currentPage, setCurrentPage] = useState(1); // для отображения текущей страницы\n  const [countCurrentPage, setCountCurrentPage] = useState(12); //отображение колличества элементов которые нам нужно отображать на странице\n\n\n  const pageNambers = [];\n  const lastEmogiIndex = currentPage * countCurrentPage; // высчитывание последнего индекса\n  const firstElemIndex = lastEmogiIndex - countCurrentPage; // вычисление первого элемента индекс.\n  const currentEmogi = emogi.slice(firstElemIndex, lastEmogiIndex);\n  \n    for(i = 1; i <= (allEmogi/emogiOnPage); i++){\n        pageNambers.push(i)\n    }\n  //Прослушивание события из input\n  const handlChange = (event) => setValue(event.target.value);\n  //   console.log(handlChange);\n  const valueArr = value.split(\" \");\n  //    const  valueArrRender = valueArr;\n  //    value.split(\" \").forEach( elem => {displaySmile.includes(elem)})\n  const filterSmile = data.filter((elem) =>\n    elem.keywords.toLowerCase().includes(valueArr)\n  );\n\n  const getData = async () => {\n    let response = await fetch(url);\n    let makeJson = await response.json();\n    setData(makeJson);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const displaySmile = filterSmile.map((elem) => (\n    <div key={elem.keywords}>\n      <div className=\"styleCard\" className=\"elem-card\">\n        <div className=\"smile\">{elem.symbol}</div>\n        <br />\n        <div className=\"title\">{elem.title}</div>\n        <br />\n        <div className=\"keywords\">{elem.keywords}</div>\n      </div>\n    </div>\n  ));\n  return (\n    <>\n      <header className=\"header\">\n        <h1 className=\"header__title\">Emoji Finder</h1>\n        <h4 className=\"h4\">Find emoji by keywords</h4>\n\n        <input\n          className=\"input\"\n          placeholder=\"Placeholder\"\n          type=\"text\"\n          onChange={handlChange}\n        />\n      </header>\n      <div className=\"container\">\n        <div className=\"content\">{displaySmile}</div>\n      </div>\n      <div>\n      {currentEmogi}\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}