{"ast":null,"code":"var _jsxFileName = \"/Users/danilledaev/my-app/src/Loading.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GetUrl() {\n  _s();\n\n  const [facebookRepos, setFacebookRepos] = useState([]);\n\n  const getData = async () => {\n    let url = \"https://api.github.com/users/facebook/repos\";\n    let response = await fetch(url);\n    let makeJson = await response.json();\n    setFacebookRepos(makeJson);\n  };\n\n  useEffect(async () => {\n    getData();\n  }, []);\n  const fin = facebookRepos.map(elem => elem.node_id);\n\n  if (fin == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }, this);\n  } else {}\n}\n\n_s(GetUrl, \"Q8oYrWCF9H5hRB6Gt6ln2xW4CH4=\");\n\n_c = GetUrl;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetUrl\");","map":{"version":3,"sources":["/Users/danilledaev/my-app/src/Loading.js"],"names":["useCallback","useEffect","useState","GetUrl","facebookRepos","setFacebookRepos","getData","url","response","fetch","makeJson","json","fin","map","elem","node_id"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;;AAEA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AACvB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCH,QAAQ,CAAC,EAAD,CAAlD;;AACA,QAAMI,OAAO,GAAG,YAAY;AAC1B,QAAIC,GAAG,GAAG,6CAAV;AACA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA1B;AACA,QAAIG,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACAN,IAAAA,gBAAgB,CAACK,QAAD,CAAhB;AACD,GALD;;AAOAT,EAAAA,SAAS,CAAC,YAAY;AACpBK,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAMM,GAAG,GAAGR,aAAa,CAACS,GAAd,CAAmBC,IAAD,IAAUA,IAAI,CAACC,OAAjC,CAAZ;;AAEA,MAAKH,GAAG,IAAI,CAAZ,EAAc;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEM,CAAE;AAGP;;GAnBaT,M;;KAAAA,M","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nexport function GetUrl() {\n  const [facebookRepos, setFacebookRepos] = useState([]);\n  const getData = async () => {\n    let url = \"https://api.github.com/users/facebook/repos\";\n    let response = await fetch(url);\n    let makeJson = await response.json();\n    setFacebookRepos(makeJson);\n  };\n\n  useEffect(async () => {\n    getData();\n  }, []);\n  const fin = facebookRepos.map((elem) => elem.node_id)\n  \n  if ( fin == 0){\n      return <div>\"Loading...\"</div>\n  }else {}\n\n \n  }\n"]},"metadata":{},"sourceType":"module"}