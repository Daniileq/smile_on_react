[{"/Users/danilledaev/my-app/src/index.js":"1","/Users/danilledaev/my-app/src/Main.js":"2","/Users/danilledaev/my-app/src/Pagination.js":"3"},{"size":183,"mtime":1646132244474,"results":"4","hashOfConfig":"5"},{"size":3292,"mtime":1646132990915,"results":"6","hashOfConfig":"5"},{"size":1205,"mtime":1646132658393,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"180un7g",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/danilledaev/my-app/src/index.js",[],[],"/Users/danilledaev/my-app/src/Main.js",["18"],[],"import { useState, useEffect } from \"react\";\nimport { Pagination } from \"./Pagination\";\n\nexport const Main = () => {\n  const url = \"https://emoji.ymatuhin.workers.dev/\";\n  const [data, setData] = useState([]);\n  const [emogiFiltred, setEmogiFiltred] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1); // для oтображения текущей страницы\n  const [countCurrentPage, setCountCurrentPage] = useState(12); //отображение колличества элементов которые нам нужно отображать на странице\n\n  //Прослушивание события из input\n  const handlChange = (event) => setValue(event.target.value);\n  //Фильтрация по двум ключевым словам и более\n  const filterSmile = (value) => {\n    let newData = data;\n    value\n      .split(\" \")\n      .forEach(\n        (word) =>\n          (newData = newData.filter((elem) =>\n            elem.keywords.toLowerCase().includes(word.toLowerCase())\n          ))\n      );\n    setEmogiFiltred(newData);\n  };\n\n  const lastEmogiIndex = currentPage * countCurrentPage; // высчитывание последнего индекса.\n  const firstElemIndex = lastEmogiIndex - countCurrentPage; // вычисление первого элемента индекс.\n  const currentEmogi = emogiFiltred.slice(firstElemIndex, lastEmogiIndex); //на к\n  const getData = async () => {\n    let response = await fetch(url);\n    let makeJson = await response.json();\n    setData(makeJson);\n    setEmogiFiltred(makeJson); //\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const displaySmile = currentEmogi.map((elem) => (\n    <div>\n      <div key={elem.keywords}>\n        <div className=\"styleCard elem-card\">\n          <div className=\"smile\">{elem.symbol} </div>\n          <br />\n          <div className=\"title\">{elem.title}</div>\n          <br />\n          <div className=\"keywords\">{elem.keywords} </div>\n        </div>\n      </div>\n    </div>\n  ));\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber); //\n  const nextPage = () => setCurrentPage((event) => event + 1); //кнопки переключения по страницам\n  const prev = () => setCurrentPage((event) => event - 1); //кнопки переключения по страницам\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1 className=\"header__title\">Emoji Finder</h1>\n        <h4 className=\"h4\">Find emoji by keywords</h4>\n\n        <input\n          className=\"input\"\n          placeholder=\"Placeholder\"\n          type=\"text\"\n          onChange={(event) => {\n            handlChange(event);\n            filterSmile(event.target.value);\n            console.log(event.target.value);\n            console.log(value);\n          }}\n        />\n      </header>\n      <div className=\"container\">\n        <div className=\"content\">{displaySmile}</div>\n\n        <div className=\"paginatior\">\n          <Pagination\n            page={currentPage}\n            datalength={filterSmile.length}\n            countCurrentPage={currentEmogi}\n            paginate={paginate}\n            prev={prev}\n            nextPage={nextPage}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","/Users/danilledaev/my-app/src/Pagination.js",[],[],{"ruleId":"19","severity":1,"message":"20","line":10,"column":28,"nodeType":"21","messageId":"22","endLine":10,"endColumn":47},"no-unused-vars","'setCountCurrentPage' is assigned a value but never used.","Identifier","unusedVar"]